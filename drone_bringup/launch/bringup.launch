<?xml version="1.0"?>
<launch>

  <arg name="server" default="$(env MOCAP_IP)"/>
    <!-- laod tf -->
	<include file="$(find drone_bringup)/launch/fixed_joints.launch"/>

	<!-- run Safemode server -->
	<node pkg="drone_bringup" name="drone_safery" type="drone_safe_node.py" respawn="true" output="screen">
		<param name="max_angle" value="$(env DRONE_SAFE_MAX_ANGLE)"/>
		<param name="disarm_delay" value="$(env DRONE_SAFE_DISARM_DELAY)"/>
	</node>

	<!-- run PX4 mavros run -->
	<include file="$(find mavros_link)/launch/px4_slam.launch">
		<arg name="tgt_system" default="1"/>
		<arg name="tgt_component" default="1" />
		<arg name="gcs_ip" default="$(env MAVROS_GCS_IP)"/>
		<arg name="fcu_url" default="$(env MAVROS_FCU_URL)" />
		<arg name="fcu_port" default="$(env MAVROS_FCU_PORT)" />
	</include>
    
	<!-- goal to reg -->
	<node pkg="drone_bringup" name="drone_reg" type="goal_to_reg.py" respawn="true" output="screen"/>
	<!-- interactive goal -->    
	<node pkg="interactive_goal" name="interactive_posestamped_node" type="interactive_posestamped_node" respawn="true"/>
	
	<!-- Gripper run -->
	<node pkg="gripper_ros" name="gripper_ros_node" type="arduino_gripper_ros.py" respawn="true" output="screen">
		<param name="port" value="$(env GRIPPER_PORT)"/>
	</node>

  <node pkg="vrpn_client_ros" type="vrpn_client_node" name="vrpn_client_node" output="screen" respawn="true">
    <rosparam subst_value="true">
      server: $(arg server)
      port: 3883

      update_frequency: 100.0
      frame_id: map

      # Use the VRPN server's time, or the client's ROS time.
      use_server_time: false
      broadcast_tf: true

      # Must either specify refresh frequency > 0.0, or a list of trackers to create
      refresh_tracker_frequency: 1.0
      #trackers:
      #- FirstTracker
      #- SecondTracker
    </rosparam>
  </node>

</launch>
